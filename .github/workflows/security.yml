name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run weekly on Monday at 00:00 UTC
    - cron: '0 0 * * 1'

jobs:
  secret-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for better scanning
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run custom secret scanner
      run: |
        python -c "
        from core.utils.security import check_for_hardcoded_secrets
        import sys
        if check_for_hardcoded_secrets('.'):
            sys.exit(1)
        "
    
    - name: Run Bandit security linter
      run: |
        bandit -r core/ backtest/ execution/ -f json -o bandit-report.json || true
        bandit -r core/ backtest/ execution/ -ll
    
    - name: Upload Bandit report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bandit-report
        path: bandit-report.json

  dependency-scan:
    name: Scan Dependencies
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety pip-audit
    
    - name: Check for known vulnerabilities with Safety
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    # Install jq for JSON parsing in pip-audit analysis
    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    
    # Run pip-audit with JSON output and analyze results
    # Logic: Allow only the known pip 25.2 vulnerability (GHSA-4xh5-x5gv-qwph)
    # - If no vulnerabilities found: exit 0 (pass)
    # - If only GHSA-4xh5-x5gv-qwph found: print warning and exit 0 (pass)
    # - If any other vulnerabilities found: print error and exit 1 (fail)
    - name: Audit dependencies with pip-audit
      run: |
        set -e
        
        # Run pip-audit and capture JSON output
        pip-audit --desc --format json > pip-audit-report.json || true
        
        # Check if the report file exists and has content
        if [ ! -s pip-audit-report.json ]; then
          echo "✅ No vulnerabilities found"
          exit 0
        fi
        
        # Parse the JSON output
        vuln_count=$(jq '.dependencies[].vulns | length' pip-audit-report.json | awk '{s+=$1} END {print s+0}')
        
        if [ "$vuln_count" -eq 0 ]; then
          echo "✅ No vulnerabilities found"
          exit 0
        fi
        
        # Check if all vulnerabilities are the known pip 25.2 issue
        known_vuln_id="GHSA-4xh5-x5gv-qwph"
        other_vulns=$(jq -r '.dependencies[].vulns[] | select(.id != "'$known_vuln_id'") | .id' pip-audit-report.json)
        
        if [ -z "$other_vulns" ]; then
          # Only the known pip vulnerability found
          echo "⚠️  Warning: Known pip 25.2 vulnerability detected (GHSA-4xh5-x5gv-qwph)"
          echo "This is a known issue and does not affect security. CI will pass."
          jq '.dependencies[] | select(.vulns != []) | {name, version, vulns: [.vulns[] | {id, description}]}' pip-audit-report.json
          exit 0
        else
          # Other vulnerabilities found - this is a failure
          echo "❌ Critical vulnerabilities found (excluding known pip 25.2 issue):"
          jq '.dependencies[] | select(.vulns != []) | {name, version, vulns: [.vulns[] | select(.id != "'$known_vuln_id'") | {id, description, fix_versions}]}' pip-audit-report.json
          exit 1
        fi
    
    - name: Upload security reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: dependency-reports
        path: |
          safety-report.json
          pip-audit-report.json

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        queries: security-extended
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"
