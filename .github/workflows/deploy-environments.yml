name: Deploy TradePulse Environments

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/deploy-environments.yml'
      - 'deploy/**'
      - 'infra/terraform/eks/**'
      - 'core/**'
      - 'application/**'
      - 'src/**'
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (staging|production)"
        required: false
        default: staging
        type: choice
        options:
          - staging
          - production

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

permissions:
  contents: read
  id-token: write

jobs:
  validate-infrastructure:
    name: Validate infrastructure definitions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform init (backend disabled)
        run: terraform -chdir=infra/terraform/eks init -backend=false

      - name: Terraform fmt
        run: terraform -chdir=infra/terraform/eks fmt -check

      - name: Terraform validate
        run: terraform -chdir=infra/terraform/eks validate -no-color

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.1'

      - name: Validate staging manifest build
        run: kustomize build deploy/kustomize/overlays/staging >/tmp/staging.yaml

      - name: Validate production manifest build
        run: kustomize build deploy/kustomize/overlays/production >/tmp/production.yaml

  deploy-staging:
    if: github.repository == 'neuron7x/TradePulse' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.environment == 'staging' || github.event.inputs.environment == 'production')))
    name: Deploy staging
    runs-on: ubuntu-latest
    needs:
      - validate-infrastructure
    environment:
      name: staging
    outputs:
      deploy_enabled: ${{ steps.configure_kube.outputs.deploy_enabled }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure kubeconfig
        id: configure_kube
        env:
          KUBE_CONFIG_STAGING: ${{ secrets.KUBE_CONFIG_STAGING }}
        run: |
          set -euo pipefail
          if [ -z "${KUBE_CONFIG_STAGING:-}" ]; then
            echo "KUBE_CONFIG_STAGING secret is not configured; skipping deployment" >&2
            echo "deploy_enabled=false" >>"$GITHUB_OUTPUT"
            exit 0
          fi
          mkdir -p "$HOME/.kube"
          echo "$KUBE_CONFIG_STAGING" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"
          echo "deploy_enabled=true" >>"$GITHUB_OUTPUT"

      - name: Install kubectl
        if: steps.configure_kube.outputs.deploy_enabled == 'true'
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.2

      - name: Install kustomize
        if: steps.configure_kube.outputs.deploy_enabled == 'true'
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.1'

      - name: Diff manifest against cluster
        if: steps.configure_kube.outputs.deploy_enabled == 'true'
        run: |
          set -euo pipefail
          if kubectl diff -k deploy/kustomize/overlays/staging; then
            exit 0
          fi
          status=$?
          if [ "$status" -gt 1 ]; then
            exit "$status"
          fi

      - name: Apply manifests
        if: steps.configure_kube.outputs.deploy_enabled == 'true'
        run: kubectl apply -k deploy/kustomize/overlays/staging --server-side --force-conflicts

      - name: Wait for rollout
        if: steps.configure_kube.outputs.deploy_enabled == 'true'
        run: kubectl rollout status deployment/tradepulse-api -n tradepulse-staging --timeout=5m

  deploy-production:
    if: github.repository == 'neuron7x/TradePulse' && needs.deploy-staging.outputs.deploy_enabled == 'true' && github.ref == 'refs/heads/main' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'))
    name: Deploy production
    runs-on: ubuntu-latest
    needs:
      - deploy-staging
    environment:
      name: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: v1.29.2

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2
        with:
          kustomize-version: '5.4.1'

      - name: Configure kubeconfig
        id: configure_kube
        env:
          KUBE_CONFIG_PRODUCTION: ${{ secrets.KUBE_CONFIG_PRODUCTION }}
        run: |
          set -euo pipefail
          if [ -z "${KUBE_CONFIG_PRODUCTION:-}" ]; then
            echo "KUBE_CONFIG_PRODUCTION secret is not configured" >&2
            exit 1
          fi
          mkdir -p "$HOME/.kube"
          echo "$KUBE_CONFIG_PRODUCTION" | base64 -d > "$HOME/.kube/config"
          chmod 600 "$HOME/.kube/config"

      - name: Diff manifest against cluster
        run: |
          set -euo pipefail
          if kubectl diff -k deploy/kustomize/overlays/production; then
            exit 0
          fi
          status=$?
          if [ "$status" -gt 1 ]; then
            exit "$status"
          fi

      - name: Apply manifests
        run: kubectl apply -k deploy/kustomize/overlays/production --server-side --force-conflicts

      - name: Wait for rollout
        run: kubectl rollout status deployment/tradepulse-api -n tradepulse-production --timeout=10m
