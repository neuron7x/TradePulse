name: Publish Python package

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build-and-publish:
    name: Build and upload package
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Ensure release tag is signed
        run: |
          tag="${{ github.event.release.tag_name }}"
          if ! git cat-file tag "$tag" | grep -q "BEGIN PGP SIGNATURE"; then
            echo "::error::Tag $tag is not signed with a GPG signature."
            exit 1
          fi

      - name: Validate release metadata
        id: release
        run: |
          tag="${{ github.event.release.tag_name }}"
          version="${tag#v}"
          if ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z.-]+)?$ ]]; then
            echo "::error::Release tag '$tag' must follow SemVer (with optional leading 'v')."
            exit 1
          fi
          file_version="$(tr -d "\n" < VERSION)"
          if [ "$file_version" != "$version" ]; then
            echo "::error::VERSION file ($file_version) does not match release tag ($version)."
            exit 1
          fi
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Enable QEMU for cross-architecture builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Generate release notes and changelog
        id: changelog
        run: |
          set -euo pipefail
          tag="${{ github.event.release.tag_name }}"
          prev_tag=""
          if git describe --tags --abbrev=0 "${tag}^" >/dev/null 2>&1; then
            prev_tag="$(git describe --tags --abbrev=0 "${tag}^")"
          fi
          if [ -n "$prev_tag" ]; then
            python tools/release/conventional_changelog.py \
              --current-tag "$tag" \
              --previous-tag "$prev_tag" \
              --output release-notes.md \
              --changelog CHANGELOG.md
          else:
            python tools/release/conventional_changelog.py \
              --current-tag "$tag" \
              --output release-notes.md \
              --changelog CHANGELOG.md
          fi
          echo "previous_tag=$prev_tag" >> "$GITHUB_OUTPUT"

      - name: Publish release notes and changelog
        uses: softprops/action-gh-release@v2
        with:
          body_path: release-notes.md
          files: |
            release-notes.md
            CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install packaging toolchain
        run: |
          python -m pip install --upgrade pip
          pip install build==1.3.0 twine==5.1.1 cibuildwheel==2.21.3 auditwheel==6.0.0

      - name: Build source distribution
        run: |
          python -m build --sdist --outdir dist

      - name: Build manylinux/musllinux wheels
        env:
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ENVIRONMENT_PASS_LINUX: "UV_HTTP_TIMEOUT"
          UV_HTTP_TIMEOUT: "60"
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Verify wheel compatibility tags
        run: |
          python scripts/packaging/verify_wheels.py wheelhouse

      - name: Stage artifacts
        run: |
          mkdir -p dist
          cp wheelhouse/*.whl dist/

      - name: Verify distribution metadata
        run: |
          twine check dist/*

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tradepulse-distributions
          path: dist
          if-no-files-found: error

      - name: Publish package to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          if [ -z "${TWINE_PASSWORD}" ]; then
            echo "::error::PYPI_API_TOKEN secret is not configured."
            exit 1
          fi
          twine upload dist/*

      - name: Attach distribution artifacts to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
