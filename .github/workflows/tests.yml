name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    name: Tests (Python ${{ matrix.python-version }})
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: ${{ matrix.python-version == '3.13' }}
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: |
          uv pip install -r requirements.lock
          uv pip install -r requirements-dev.lock
      - name: Prepare test report directories
        run: |
          mkdir -p reports
      - name: Run unit and integration tests with coverage
        run: |
          .venv/bin/python -m pytest tests/unit/ tests/integration/ tests/property/ tests/fuzz/ \
            --cov=core --cov=backtest --cov=execution \
            --cov-report=xml --cov-report=term-missing --cov-report=html:coverage_html \
            --cov-fail-under=90 \
            --junitxml=reports/unit-integration-tests.xml \
            --html=reports/unit-integration-report.html --self-contained-html
      - name: Run property-based tests with statistics
        run: |
          .venv/bin/python -m pytest tests/property/ --hypothesis-show-statistics \
            --junitxml=reports/property-tests.xml \
            --html=reports/property-tests-report.html --self-contained-html
      - name: Upload JUnit test reports
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results-${{ matrix.python-version }}
          path: |
            reports/unit-integration-tests.xml
            reports/property-tests.xml
          if-no-files-found: error
      - name: Upload HTML test reports
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-reports-${{ matrix.python-version }}
          path: |
            reports/unit-integration-report.html
            reports/property-tests-report.html
          if-no-files-found: error
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.python-version }}
          path: |
            coverage.xml
            coverage_html
          if-no-files-found: error
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: py${{ matrix.python-version }}
          name: py${{ matrix.python-version }}-coverage
          fail_ci_if_error: false

  pytest-xdist:
    name: Pytest (xdist profiling)
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Set up uv
        uses: astral-sh/setup-uv@v3
      - name: Create virtual environment
        run: uv venv
      - name: Install dependencies
        run: |
          uv pip install -r requirements.lock
          uv pip install -r requirements-dev.lock
      - name: Run pytest in parallel with profiling
        run: |
          .venv/bin/python -m pytest tests/ -n auto --durations=20 --profile
      - name: Collect profiling artifacts
        if: always()
        run: |
          mkdir -p reports/profiling
          if [ -d prof ]; then cp -r prof/. reports/profiling/; fi
      - name: Upload profiling artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-profiling
          path: reports/profiling
          if-no-files-found: warn
