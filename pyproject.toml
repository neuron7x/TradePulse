[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tradepulse"
dynamic = ["version", "readme"]
description = "Advanced algorithmic trading framework with geometric market indicators"
authors = [{ name = "TradePulse Contributors" }]
license = { file = "LICENSE" }
requires-python = ">=3.11"
keywords = ["trading", "quant", "algorithmic", "markets", "analytics"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial :: Investment",
]
dependencies = [
    "numpy>=2.3.3",
    "scipy>=1.16.2",
    "pandas>=2.3.3",
    "networkx>=3.5",
    "pydantic>=2.12.1,<3.0.0",
    "pydantic-settings>=2.11.0,<3.0.0",
    "pandera>=0.20.4,<0.27",
    "exchange-calendars>=4.11.1",
    "PyYAML>=6.0.3",
    "hydra-core>=1.3.2",
    "omegaconf>=2.3.0",
    "prometheus-client>=0.23.1",
    "click>=8.3.0",
    "opentelemetry-api>=1.37.0",
    "opentelemetry-sdk>=1.37.0",
    "opentelemetry-exporter-otlp>=1.37.0",
    "httpx>=0.28.1",
    "websockets>=15.0.1",
    "ccxt>=4.5.10",
    "tenacity>=9.1.2",
    "aiolimiter>=1.2.1",
    "fastapi>=0.119.0,<1.0.0",
    "PyJWT[crypto]>=2.9.0",
    "uvicorn>=0.37.0",
    "jinja2>=3.1.6",
    "setuptools>=80.9.0",
    "requests>=2.32.5",
    "urllib3>=2.5.0",
    "idna>=3.11",
    "certifi>=2025.10.5",
]

[project.optional-dependencies]
connectors = [
    "ccxt>=4.5.10",
    "websockets>=15.0.1",
    "alpaca-py>=0.42.2",
    "polygon-api-client>=1.15.4",
]
feature_store = [
    "pyarrow>=21.0.0",
    "polars>=1.34.0",
]
dev = [
    "black>=25.9.0",
    "flake8>=7.1.1",
    "ruff>=0.14.0",
    "isort>=5.13.2",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=7.0.0",
    "pytest-asyncio>=1.2.0",
    "pytest-html>=4.1.1",
    "pytest-xdist>=3.8.0",
    "pytest-profiling>=1.8.1; python_version < \"3.13\"",
    "mutmut>=3.3.1",
    "hypothesis>=6.140.3",
    "scalene>=1.5.55",
    "py-spy>=0.4.1",
    "bandit>=1.8.6",
    "protobuf>=6.32.1",
    "build>=1.3.0",
    "twine>=6.2.0",
    "pip-tools>=7.5.1",
    "cibuildwheel>=3.2.1",
    "towncrier>=25.8.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.21",
    "mkdocs-minify-plugin>=0.8.0",
    "pymdown-extensions>=10.16.1",
    "mike>=2.1.3",
]
gpu = [
    "numba>=0.62.1",
    "cupy>=13.6.0",
]

[project.scripts]
tradepulse-sync = "scripts.resilient_data_sync:main"

[tool.setuptools.dynamic]
version = { file = "VERSION" }
readme = { file = "README.md", content-type = "text/markdown" }

[tool.setuptools.packages.find]
where = ["."]
include = [
    "analytics",
    "analytics.*",
    "application",
    "application.*",
    "backtest",
    "backtest.*",
    "core",
    "core.*",
    "domain",
    "domain.*",
    "execution",
    "execution.*",
    "interfaces",
    "interfaces.*",
    "markets",
    "markets.*",
    "nfpro",
    "nfpro.*",
    "observability",
    "observability.*",
    "tools",
    "tools.*",
]
exclude = ["tests", "tests.*", "docs", "docs.*"]

[tool.mutmut]
paths_to_mutate = [
    "core",
    "backtest",
    "execution",
]
tests_dir = "tests"
runner = "python -m pytest tests/unit tests/integration tests/property -q"
use_coverage = true

[tool.coverage.run]
branch = true
parallel = true
source = ["core", "backtest", "execution", "analytics"]

[tool.coverage.report]
fail_under = 90
show_missing = true
skip_covered = false

[tool.ruff]
line-length = 100

[tool.ruff.lint]
select = ["E", "F", "W", "I"]
ignore = ["E203"]

[tool.isort]
profile = "black"
line_length = 100

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]

[tool.mypy]
ignore_missing_imports = true
plugins = ["numpy.typing.mypy_plugin"]

[tool.towncrier]
directory = "newsfragments"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
template = "tools/release/towncrier_template.jinja"
title_format = "{name} {version} ({project_date})"
issue_format = "#{issue}"
name = "TradePulse"

[[tool.towncrier.section]]
path = ""
name = "TradePulse"

[[tool.towncrier.type]]
directory = "feature"
name = "üöÄ Features"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "üêõ Fixes"
showcontent = true

[[tool.towncrier.type]]
directory = "performance"
name = "‚ö° Performance"
showcontent = true

[[tool.towncrier.type]]
directory = "maintenance"
name = "üßπ Maintenance"
showcontent = true

[[tool.towncrier.type]]
directory = "docs"
name = "üìù Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "tests"
name = "‚úÖ Tests"
showcontent = true

[[tool.towncrier.type]]
directory = "ci"
name = "ü§ñ CI"
showcontent = true

[[tool.towncrier.type]]
directory = "build"
name = "üì¶ Build"
showcontent = true

[[tool.towncrier.type]]
directory = "security"
name = "üîê Security"
showcontent = true

[[tool.towncrier.type]]
directory = "chore"
name = "üß∞ Chores"
showcontent = true
