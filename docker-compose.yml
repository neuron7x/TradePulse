# SPDX-License-Identifier: MIT
version: '3.9'
services:
  tradepulse:
    build: .
    ports:
      - "8001:8001"
    restart: unless-stopped
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_SECURITY_PROTOCOL: "SSL"
      KAFKA_SSL_CAFILE: "/opt/tradepulse/certs/kafka/ca.crt"
      KAFKA_SSL_CERTFILE: "/opt/tradepulse/certs/kafka/client.crt"
      KAFKA_SSL_KEYFILE: "/opt/tradepulse/certs/kafka/client.key"
      KAFKA_SASL_MECHANISM: "PLAIN"
      KAFKA_SASL_USERNAME: "tradepulse"
      KAFKA_SASL_PASSWORD: "tradepulse-secret"
    healthcheck:
      test:
        - "CMD"
        - "python"
        - "-c"
        - "import urllib.request, sys; urllib.request.urlopen('http://localhost:8001/health', timeout=5.0)"
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "co.elastic.logs/enabled=true"
      - "co.elastic.logs/module=tradepulse"
    depends_on:
      - kafka
      - prometheus
      - logstash
    volumes:
      - ./configs/local/kafka:/opt/tradepulse/certs/kafka:ro
  kafka:
    image: docker.io/bitnami/kafka:3.6
    restart: unless-stopped
    ports:
      - "19092:9093"
    environment:
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9094"
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_KRAFT_CLUSTER_ID: "TrdPlsClusterLocal001"
      KAFKA_CFG_LISTENERS: "INTERNAL://:9092,EXTERNAL://:9093,CONTROLLER://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "INTERNAL://kafka:9092,EXTERNAL://localhost:19092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:SSL,EXTERNAL:SSL,CONTROLLER:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_CFG_SSL_CLIENT_AUTH: "required"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_TLS_TYPE: "PEM"
      KAFKA_TLS_CERT: "/etc/kafka/certs/server.crt"
      KAFKA_TLS_KEY: "/etc/kafka/certs/server.key"
      KAFKA_TLS_CA_CERT: "/etc/kafka/certs/ca.crt"
      KAFKA_CLIENT_USERS: "tradepulse"
      KAFKA_CLIENT_PASSWORDS: "tradepulse-secret"
      KAFKA_CFG_SASL_ENABLED_MECHANISMS: "PLAIN"
      KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: "PLAIN"
      KAFKA_CFG_SUPER_USERS: "User:tradepulse"
      KAFKA_HEAP_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - ./configs/local/kafka:/etc/kafka/certs:ro
  prometheus:
    image: prom/prometheus
    volumes:
      - ./deploy/prometheus.yml:/etc/prometheus/prometheus.yml
    ports: ["9090:9090"]
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.3
    environment:
      - xpack.monitoring.enabled=false
    volumes:
      - ./observability/logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.3
    user: root
    command: ["filebeat", "-e", "-strict.perms=false", "-c", "/usr/share/filebeat/filebeat.yml"]
    volumes:
      - ./observability/logging/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - logstash

volumes:
  elasticsearch-data:
