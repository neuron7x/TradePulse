{
  "components": {
    "schemas": {
      "FeatureRequest": {
        "description": "Payload describing the series to transform into features.",
        "properties": {
          "bars": {
            "description": "Ordered price bars.",
            "items": {
              "$ref": "#/components/schemas/MarketBar"
            },
            "minItems": 1,
            "title": "Bars",
            "type": "array"
          },
          "symbol": {
            "description": "Instrument identifier.",
            "minLength": 1,
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "bars"
        ],
        "title": "FeatureRequest",
        "type": "object"
      },
      "FeatureResponse": {
        "description": "Response containing the most recent feature snapshot.",
        "properties": {
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "title": "Features",
            "type": "object"
          },
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "features"
        ],
        "title": "FeatureResponse",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "KillSwitchRequest": {
        "description": "Request payload for activating the kill-switch.",
        "properties": {
          "reason": {
            "description": "Human readable reason.",
            "maxLength": 256,
            "minLength": 3,
            "title": "Reason",
            "type": "string"
          }
        },
        "required": [
          "reason"
        ],
        "title": "KillSwitchRequest",
        "type": "object"
      },
      "KillSwitchResponse": {
        "description": "Response payload describing the kill-switch state.",
        "properties": {
          "already_engaged": {
            "description": "True if the kill-switch was already active.",
            "title": "Already Engaged",
            "type": "boolean"
          },
          "kill_switch_engaged": {
            "description": "Whether the kill-switch is active.",
            "title": "Kill Switch Engaged",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason supplied when the kill-switch was engaged.",
            "title": "Reason",
            "type": "string"
          },
          "status": {
            "description": "Status message of the kill-switch operation.",
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "status",
          "kill_switch_engaged",
          "reason",
          "already_engaged"
        ],
        "title": "KillSwitchResponse",
        "type": "object"
      },
      "MarketBar": {
        "description": "Representation of a single OHLCV bar for online inference.",
        "properties": {
          "askVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Ask-side queue volume for microstructure features.",
            "title": "Askvolume"
          },
          "bidVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Bid-side queue volume for microstructure features.",
            "title": "Bidvolume"
          },
          "close": {
            "description": "Close price for the interval.",
            "title": "Close",
            "type": "number"
          },
          "high": {
            "description": "High price for the interval.",
            "title": "High",
            "type": "number"
          },
          "low": {
            "description": "Low price for the interval.",
            "title": "Low",
            "type": "number"
          },
          "open": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Opening price for the interval.",
            "title": "Open"
          },
          "signedVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Signed volume (buy-sell imbalance).",
            "title": "Signedvolume"
          },
          "timestamp": {
            "description": "Timestamp of the bar in ISO 8601 format.",
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          },
          "volume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Traded volume for the bar. Optional for illiquid venues.",
            "title": "Volume"
          }
        },
        "required": [
          "timestamp",
          "high",
          "low",
          "close"
        ],
        "title": "MarketBar",
        "type": "object"
      },
      "PredictionRequest": {
        "description": "Prediction request payload, optionally specifying a forecast horizon.",
        "properties": {
          "bars": {
            "description": "Ordered price bars.",
            "items": {
              "$ref": "#/components/schemas/MarketBar"
            },
            "minItems": 1,
            "title": "Bars",
            "type": "array"
          },
          "horizon_seconds": {
            "default": 300,
            "description": "Prediction horizon in seconds for contextual metadata.",
            "maximum": 3600.0,
            "minimum": 60.0,
            "title": "Horizon Seconds",
            "type": "integer"
          },
          "symbol": {
            "description": "Instrument identifier.",
            "minLength": 1,
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "bars"
        ],
        "title": "PredictionRequest",
        "type": "object"
      },
      "PredictionResponse": {
        "description": "Response representing the generated trading signal.",
        "properties": {
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          },
          "horizon_seconds": {
            "title": "Horizon Seconds",
            "type": "integer"
          },
          "score": {
            "description": "Composite alpha score driving the action.",
            "title": "Score",
            "type": "number"
          },
          "signal": {
            "additionalProperties": true,
            "title": "Signal",
            "type": "object"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "horizon_seconds",
          "score",
          "signal"
        ],
        "title": "PredictionResponse",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    }
  },
  "info": {
    "contact": {
      "name": "TradePulse Platform Team",
      "url": "https://github.com/neuron7x/TradePulse"
    },
    "description": "Production-ready endpoints for computing feature vectors and generating lightweight trading signals from streaming market data.",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "title": "TradePulse Online Inference API",
    "version": "0.1.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/admin/kill-switch": {
      "delete": {
        "description": "Reset the kill-switch in an idempotent manner and audit the action.",
        "operationId": "reset_kill_switch_admin_kill_switch_delete",
        "parameters": [
          {
            "in": "header",
            "name": "X-Admin-Token",
            "required": true,
            "schema": {
              "title": "X-Admin-Token",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Admin-Subject",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Subject"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Reset the global kill-switch",
        "tags": [
          "admin"
        ]
      },
      "get": {
        "description": "Return the current kill-switch status and audit the read.",
        "operationId": "read_kill_switch_state_admin_kill_switch_get",
        "parameters": [
          {
            "in": "header",
            "name": "X-Admin-Token",
            "required": true,
            "schema": {
              "title": "X-Admin-Token",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Admin-Subject",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Subject"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Read the global kill-switch state",
        "tags": [
          "admin"
        ]
      },
      "post": {
        "description": "Engage the risk manager kill-switch and log the operation.",
        "operationId": "engage_kill_switch_admin_kill_switch_post",
        "parameters": [
          {
            "in": "header",
            "name": "X-Admin-Token",
            "required": true,
            "schema": {
              "title": "X-Admin-Token",
              "type": "string"
            }
          },
          {
            "in": "header",
            "name": "X-Admin-Subject",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "X-Admin-Subject"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KillSwitchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Engage the global kill-switch",
        "tags": [
          "admin"
        ]
      }
    },
    "/features": {
      "post": {
        "operationId": "compute_features_features_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Generate the latest engineered feature vector",
        "tags": [
          "features"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Health Check Health Get",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Health probe",
        "tags": [
          "health"
        ]
      }
    },
    "/predictions": {
      "post": {
        "operationId": "generate_prediction_predictions_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Produce a trading signal for the latest bar",
        "tags": [
          "predictions"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Operational endpoints",
      "name": "health"
    },
    {
      "description": "Feature engineering APIs",
      "name": "features"
    },
    {
      "description": "Signal forecasting APIs",
      "name": "predictions"
    }
  ]
}