{
  "openapi": "3.1.0",
  "info": {
    "title": "TradePulse Online Inference API",
    "description": "Production-ready endpoints for computing feature vectors and generating lightweight trading signals from streaming market data.",
    "contact": {
      "name": "TradePulse Platform Team",
      "url": "https://github.com/neuron7x/TradePulse"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "0.2.0"
  },
  "paths": {
    "/admin/kill-switch": {
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Read the global kill-switch state",
        "description": "Inspect the kill-switch state and append an immutable audit record.",
        "operationId": "read_kill_switch_state_admin_kill_switch_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ]
      },
      "post": {
        "tags": [
          "admin"
        ],
        "summary": "Engage the global kill-switch",
        "description": "Engage or reaffirm the kill-switch and emit a signed audit log entry.",
        "operationId": "engage_kill_switch_admin_kill_switch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KillSwitchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ]
      },
      "delete": {
        "tags": [
          "admin"
        ],
        "summary": "Reset the global kill-switch",
        "description": "Reset the kill-switch in an idempotent manner and preserve an audit trail.",
        "operationId": "reset_kill_switch_admin_kill_switch_delete",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Health probe",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Prometheus metrics",
        "operationId": "prometheus_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/features": {
      "post": {
        "tags": [
          "features"
        ],
        "summary": "Generate the latest engineered feature vector",
        "operationId": "compute_features_features_post",
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Number of feature snapshots to return.",
              "default": 1,
              "title": "Limit"
            },
            "description": "Number of feature snapshots to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
              "title": "Cursor"
            },
            "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter snapshots on or after this timestamp.",
              "title": "Startat"
            },
            "description": "Filter snapshots on or after this timestamp."
          },
          {
            "name": "endAt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter snapshots on or before this timestamp.",
              "title": "Endat"
            },
            "description": "Filter snapshots on or before this timestamp."
          },
          {
            "name": "featurePrefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return only feature keys with the provided prefix.",
              "title": "Featureprefix"
            },
            "description": "Return only feature keys with the provided prefix."
          },
          {
            "name": "feature",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific feature keys to include.",
              "title": "Feature"
            },
            "description": "Specific feature keys to include."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/predictions": {
      "post": {
        "tags": [
          "predictions"
        ],
        "summary": "Produce a trading signal for the latest bar",
        "operationId": "generate_prediction_predictions_post",
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Number of predictions to return.",
              "default": 1,
              "title": "Limit"
            },
            "description": "Number of predictions to return."
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
              "title": "Cursor"
            },
            "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp."
          },
          {
            "name": "startAt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return predictions generated at or after this time.",
              "title": "Startat"
            },
            "description": "Return predictions generated at or after this time."
          },
          {
            "name": "endAt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return predictions generated at or before this time.",
              "title": "Endat"
            },
            "description": "Return predictions generated at or before this time."
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter predictions by signal action.",
              "title": "Action"
            },
            "description": "Filter predictions by signal action."
          },
          {
            "name": "minConfidence",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum signal confidence to include.",
              "title": "Minconfidence"
            },
            "description": "Minimum signal confidence to include."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ComponentHealth": {
        "properties": {
          "healthy": {
            "type": "boolean",
            "title": "Healthy"
          },
          "status": {
            "type": "string",
            "enum": [
              "operational",
              "degraded",
              "failed"
            ],
            "title": "Status"
          },
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          },
          "metrics": {
            "additionalProperties": true,
            "type": "object",
            "title": "Metrics"
          }
        },
        "type": "object",
        "required": [
          "healthy",
          "status"
        ],
        "title": "ComponentHealth",
        "description": "Health status for an individual subsystem."
      },
      "FeatureFilters": {
        "properties": {
          "start_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          },
          "end_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End At"
          },
          "feature_prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Prefix"
          },
          "feature_keys": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Feature Keys"
          }
        },
        "type": "object",
        "title": "FeatureFilters",
        "description": "Echoed filter parameters for feature responses."
      },
      "FeatureRequest": {
        "properties": {
          "symbol": {
            "type": "string",
            "minLength": 1,
            "title": "Symbol",
            "description": "Instrument identifier."
          },
          "bars": {
            "items": {
              "$ref": "#/components/schemas/MarketBar"
            },
            "type": "array",
            "minItems": 1,
            "title": "Bars",
            "description": "Ordered price bars."
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "bars"
        ],
        "title": "FeatureRequest",
        "description": "Payload describing the series to transform into features."
      },
      "FeatureResponse": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          },
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Features"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FeatureSnapshot"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "filters": {
            "$ref": "#/components/schemas/FeatureFilters"
          }
        },
        "type": "object",
        "required": [
          "symbol"
        ],
        "title": "FeatureResponse",
        "description": "Response containing the most recent feature snapshot."
      },
      "FeatureSnapshot": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "type": "object",
            "title": "Features"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "features"
        ],
        "title": "FeatureSnapshot",
        "description": "Single feature vector at a specific timestamp."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ready",
              "degraded",
              "failed"
            ],
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "components": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ComponentHealth"
            },
            "type": "object",
            "title": "Components"
          }
        },
        "type": "object",
        "required": [
          "status",
          "components"
        ],
        "title": "HealthResponse",
        "description": "Structured response for the readiness probe."
      },
      "KillSwitchRequest": {
        "properties": {
          "reason": {
            "type": "string",
            "maxLength": 256,
            "minLength": 3,
            "title": "Reason",
            "description": "Human readable reason."
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "KillSwitchRequest",
        "description": "Request payload for activating the kill-switch."
      },
      "KillSwitchResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Status message of the kill-switch operation."
          },
          "kill_switch_engaged": {
            "type": "boolean",
            "title": "Kill Switch Engaged",
            "description": "Whether the kill-switch is active."
          },
          "reason": {
            "type": "string",
            "title": "Reason",
            "description": "Reason supplied when the kill-switch was engaged."
          },
          "already_engaged": {
            "type": "boolean",
            "title": "Already Engaged",
            "description": "True if the kill-switch was already active."
          }
        },
        "type": "object",
        "required": [
          "status",
          "kill_switch_engaged",
          "reason",
          "already_engaged"
        ],
        "title": "KillSwitchResponse",
        "description": "Response payload describing the kill-switch state."
      },
      "MarketBar": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Timestamp of the bar in ISO 8601 format."
          },
          "open": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Open",
            "description": "Opening price for the interval."
          },
          "high": {
            "type": "number",
            "title": "High",
            "description": "High price for the interval."
          },
          "low": {
            "type": "number",
            "title": "Low",
            "description": "Low price for the interval."
          },
          "close": {
            "type": "number",
            "title": "Close",
            "description": "Close price for the interval."
          },
          "volume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume",
            "description": "Traded volume for the bar. Optional for illiquid venues."
          },
          "bidVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bidvolume",
            "description": "Bid-side queue volume for microstructure features."
          },
          "askVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Askvolume",
            "description": "Ask-side queue volume for microstructure features."
          },
          "signedVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signedvolume",
            "description": "Signed volume (buy-sell imbalance)."
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "high",
          "low",
          "close"
        ],
        "title": "MarketBar",
        "description": "Representation of a single OHLCV bar for online inference."
      },
      "PaginationMeta": {
        "properties": {
          "cursor": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor"
          },
          "next_cursor": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "limit": {
            "type": "integer",
            "title": "Limit",
            "default": 0
          },
          "returned": {
            "type": "integer",
            "title": "Returned",
            "default": 0
          }
        },
        "type": "object",
        "title": "PaginationMeta",
        "description": "Pagination envelope used by collection responses."
      },
      "PredictionFilters": {
        "properties": {
          "start_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          },
          "end_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End At"
          },
          "actions": {
            "items": {
              "$ref": "#/components/schemas/SignalAction"
            },
            "type": "array",
            "title": "Actions"
          },
          "min_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Confidence"
          }
        },
        "type": "object",
        "title": "PredictionFilters",
        "description": "Echoed filter parameters for prediction responses."
      },
      "PredictionRequest": {
        "properties": {
          "symbol": {
            "type": "string",
            "minLength": 1,
            "title": "Symbol",
            "description": "Instrument identifier."
          },
          "bars": {
            "items": {
              "$ref": "#/components/schemas/MarketBar"
            },
            "type": "array",
            "minItems": 1,
            "title": "Bars",
            "description": "Ordered price bars."
          },
          "horizon_seconds": {
            "type": "integer",
            "maximum": 3600.0,
            "minimum": 60.0,
            "title": "Horizon Seconds",
            "description": "Prediction horizon in seconds for contextual metadata.",
            "default": 300
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "bars"
        ],
        "title": "PredictionRequest",
        "description": "Prediction request payload, optionally specifying a forecast horizon."
      },
      "PredictionResponse": {
        "properties": {
          "symbol": {
            "type": "string",
            "title": "Symbol"
          },
          "generated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Generated At"
          },
          "horizon_seconds": {
            "type": "integer",
            "title": "Horizon Seconds"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score",
            "description": "Composite alpha score driving the primary action."
          },
          "signal": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signal",
            "description": "Primary trading signal at the head of the page."
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PredictionSnapshot"
            },
            "type": "array",
            "title": "Items"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "filters": {
            "$ref": "#/components/schemas/PredictionFilters"
          }
        },
        "type": "object",
        "required": [
          "symbol",
          "horizon_seconds"
        ],
        "title": "PredictionResponse",
        "description": "Response representing the generated trading signal."
      },
      "PredictionSnapshot": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "score": {
            "type": "number",
            "title": "Score"
          },
          "signal": {
            "additionalProperties": true,
            "type": "object",
            "title": "Signal"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "score",
          "signal"
        ],
        "title": "PredictionSnapshot",
        "description": "Snapshot of a derived signal at a point in time."
      },
      "SignalAction": {
        "type": "string",
        "enum": [
          "buy",
          "sell",
          "hold",
          "exit"
        ],
        "title": "SignalAction",
        "description": "Supported signal directives."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2Bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "health",
      "description": "Operational endpoints"
    },
    {
      "name": "features",
      "description": "Feature engineering APIs"
    },
    {
      "name": "predictions",
      "description": "Signal forecasting APIs"
    }
  ]
}