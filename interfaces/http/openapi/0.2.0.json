{
  "components": {
    "headers": {
      "Idempotency-Key": {
        "description": "Idempotency key echoed on responses. Keys are valid for 15 minutes.",
        "schema": {
          "maxLength": 128,
          "type": "string"
        }
      },
      "X-Idempotent-Replay": {
        "description": "Sent with value 'true' when a response is replayed from the idempotency ledger.",
        "schema": {
          "enum": [
            "true"
          ],
          "type": "string"
        }
      }
    },
    "schemas": {
      "ApiErrorCode": {
        "description": "Stable error codes returned by the public HTTP API.",
        "enum": [
          "ERR_BAD_REQUEST",
          "ERR_AUTH_REQUIRED",
          "ERR_FORBIDDEN",
          "ERR_NOT_FOUND",
          "ERR_RATE_LIMIT",
          "ERR_VALIDATION_FAILED",
          "ERR_UNPROCESSABLE",
          "ERR_INTERNAL",
          "ERR_FEATURES_EMPTY",
          "ERR_FEATURES_MISSING",
          "ERR_FEATURES_INVALID",
          "ERR_FEATURES_FILTER_MISMATCH",
          "ERR_INVALID_CURSOR",
          "ERR_INVALID_CONFIDENCE",
          "ERR_PREDICTIONS_FILTER_MISMATCH",
          "ERR_IDEMPOTENCY_CONFLICT",
          "ERR_IDEMPOTENCY_INVALID"
        ],
        "title": "ApiErrorCode",
        "type": "string"
      },
      "ComponentHealth": {
        "description": "Health status for an individual subsystem.",
        "properties": {
          "detail": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Detail"
          },
          "healthy": {
            "title": "Healthy",
            "type": "boolean"
          },
          "metrics": {
            "additionalProperties": true,
            "title": "Metrics",
            "type": "object"
          },
          "status": {
            "enum": [
              "operational",
              "degraded",
              "failed"
            ],
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "healthy",
          "status"
        ],
        "title": "ComponentHealth",
        "type": "object"
      },
      "ErrorPayload": {
        "description": "Canonical error payload returned by the HTTP API.",
        "examples": [
          {
            "code": "ERR_VALIDATION_FAILED",
            "message": "Invalid request payload.",
            "meta": {
              "errors": [
                {
                  "loc": [
                    "body",
                    "symbol"
                  ],
                  "msg": "Field required",
                  "type": "missing"
                }
              ]
            },
            "path": "/v1/features"
          }
        ],
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ApiErrorCode",
            "description": "Stable application error code."
          },
          "message": {
            "description": "Human-readable description of the error.",
            "title": "Message",
            "type": "string"
          },
          "meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Optional machine-parsable context for troubleshooting.",
            "title": "Meta"
          },
          "path": {
            "description": "Request path that triggered the error.",
            "title": "Path",
            "type": "string"
          }
        },
        "required": [
          "code",
          "message",
          "path"
        ],
        "title": "ErrorPayload",
        "type": "object"
      },
      "ErrorResponse": {
        "description": "Envelope structuring error responses.",
        "properties": {
          "error": {
            "$ref": "#/components/schemas/ErrorPayload"
          }
        },
        "required": [
          "error"
        ],
        "title": "ErrorResponse",
        "type": "object"
      },
      "FeatureFilters": {
        "description": "Echoed filter parameters for feature responses.",
        "example": {
          "feature_keys": [
            "macd",
            "macd_signal"
          ],
          "feature_prefix": "macd",
          "start_at": "2025-01-01T00:00:00Z"
        },
        "properties": {
          "end_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End At"
          },
          "feature_keys": {
            "items": {
              "type": "string"
            },
            "title": "Feature Keys",
            "type": "array"
          },
          "feature_prefix": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Prefix"
          },
          "start_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          }
        },
        "title": "FeatureFilters",
        "type": "object"
      },
      "FeatureRequest": {
        "description": "Payload describing the series to transform into features.",
        "examples": [
          {
            "bars": [
              {
                "askVolume": 9.0,
                "bidVolume": 9.1,
                "close": 42005.2,
                "high": 42010.5,
                "low": 41980.0,
                "open": 42000.1,
                "signedVolume": 0.25,
                "timestamp": "2025-01-01T00:00:00Z",
                "volume": 18.2
              }
            ],
            "symbol": "BTC-USD"
          }
        ],
        "properties": {
          "bars": {
            "description": "Ordered price bars.",
            "items": {
              "$ref": "#/components/schemas/MarketBar"
            },
            "minItems": 1,
            "title": "Bars",
            "type": "array"
          },
          "symbol": {
            "description": "Instrument identifier.",
            "minLength": 1,
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "bars"
        ],
        "title": "FeatureRequest",
        "type": "object"
      },
      "FeatureResponse": {
        "description": "Response containing the most recent feature snapshot.",
        "examples": [
          {
            "features": {
              "macd": 0.42,
              "macd_histogram": 0.05,
              "macd_signal": 0.37,
              "rsi": 61.2
            },
            "filters": {
              "feature_keys": [
                "macd",
                "macd_signal"
              ],
              "feature_prefix": "macd"
            },
            "generated_at": "2025-01-01T00:00:30Z",
            "items": [
              {
                "features": {
                  "macd": 0.42,
                  "macd_histogram": 0.05,
                  "macd_signal": 0.37,
                  "rsi": 61.2
                },
                "timestamp": "2025-01-01T00:00:30Z"
              }
            ],
            "pagination": {
              "limit": 1,
              "next_cursor": "2025-01-01T00:00:00Z",
              "returned": 1
            },
            "symbol": "BTC-USD"
          }
        ],
        "properties": {
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "title": "Features",
            "type": "object"
          },
          "filters": {
            "$ref": "#/components/schemas/FeatureFilters"
          },
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/FeatureSnapshot"
            },
            "title": "Items",
            "type": "array"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "FeatureResponse",
        "type": "object"
      },
      "FeatureSnapshot": {
        "description": "Single feature vector at a specific timestamp.",
        "example": {
          "features": {
            "macd": 0.42,
            "macd_histogram": 0.05,
            "macd_signal": 0.37
          },
          "timestamp": "2025-01-01T00:00:30Z"
        },
        "properties": {
          "features": {
            "additionalProperties": {
              "type": "number"
            },
            "title": "Features",
            "type": "object"
          },
          "timestamp": {
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "features"
        ],
        "title": "FeatureSnapshot",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "HealthResponse": {
        "description": "Structured response for the readiness probe.",
        "properties": {
          "components": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ComponentHealth"
            },
            "title": "Components",
            "type": "object"
          },
          "status": {
            "enum": [
              "ready",
              "degraded",
              "failed"
            ],
            "title": "Status",
            "type": "string"
          },
          "timestamp": {
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "status",
          "components"
        ],
        "title": "HealthResponse",
        "type": "object"
      },
      "KillSwitchRequest": {
        "description": "Request payload for activating the kill-switch.",
        "properties": {
          "reason": {
            "description": "Human readable reason.",
            "maxLength": 256,
            "minLength": 3,
            "title": "Reason",
            "type": "string"
          }
        },
        "required": [
          "reason"
        ],
        "title": "KillSwitchRequest",
        "type": "object"
      },
      "KillSwitchResponse": {
        "description": "Response payload describing the kill-switch state.",
        "properties": {
          "already_engaged": {
            "description": "True if the kill-switch was already active.",
            "title": "Already Engaged",
            "type": "boolean"
          },
          "kill_switch_engaged": {
            "description": "Whether the kill-switch is active.",
            "title": "Kill Switch Engaged",
            "type": "boolean"
          },
          "reason": {
            "description": "Reason supplied when the kill-switch was engaged.",
            "title": "Reason",
            "type": "string"
          },
          "status": {
            "description": "Status message of the kill-switch operation.",
            "title": "Status",
            "type": "string"
          }
        },
        "required": [
          "status",
          "kill_switch_engaged",
          "reason",
          "already_engaged"
        ],
        "title": "KillSwitchResponse",
        "type": "object"
      },
      "MarketBar": {
        "description": "Representation of a single OHLCV bar for online inference.",
        "properties": {
          "askVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Ask-side queue volume for microstructure features.",
            "title": "Askvolume"
          },
          "bidVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Bid-side queue volume for microstructure features.",
            "title": "Bidvolume"
          },
          "close": {
            "description": "Close price for the interval.",
            "title": "Close",
            "type": "number"
          },
          "high": {
            "description": "High price for the interval.",
            "title": "High",
            "type": "number"
          },
          "low": {
            "description": "Low price for the interval.",
            "title": "Low",
            "type": "number"
          },
          "open": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Opening price for the interval.",
            "title": "Open"
          },
          "signedVolume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Signed volume (buy-sell imbalance).",
            "title": "Signedvolume"
          },
          "timestamp": {
            "description": "Timestamp of the bar in ISO 8601 format.",
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          },
          "volume": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Traded volume for the bar. Optional for illiquid venues.",
            "title": "Volume"
          }
        },
        "required": [
          "timestamp",
          "high",
          "low",
          "close"
        ],
        "title": "MarketBar",
        "type": "object"
      },
      "PaginationMeta": {
        "description": "Pagination envelope used by collection responses.",
        "example": {
          "limit": 50,
          "next_cursor": "2025-01-01T00:00:00Z",
          "returned": 50
        },
        "properties": {
          "cursor": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cursor"
          },
          "limit": {
            "default": 0,
            "title": "Limit",
            "type": "integer"
          },
          "next_cursor": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Cursor"
          },
          "returned": {
            "default": 0,
            "title": "Returned",
            "type": "integer"
          }
        },
        "title": "PaginationMeta",
        "type": "object"
      },
      "PredictionFilters": {
        "description": "Echoed filter parameters for prediction responses.",
        "example": {
          "actions": [
            "buy"
          ],
          "min_confidence": 0.6,
          "start_at": "2025-01-01T00:00:00Z"
        },
        "properties": {
          "actions": {
            "items": {
              "$ref": "#/components/schemas/SignalAction"
            },
            "title": "Actions",
            "type": "array"
          },
          "end_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "End At"
          },
          "min_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Confidence"
          },
          "start_at": {
            "anyOf": [
              {
                "format": "date-time",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start At"
          }
        },
        "title": "PredictionFilters",
        "type": "object"
      },
      "PredictionRequest": {
        "description": "Prediction request payload, optionally specifying a forecast horizon.",
        "examples": [
          {
            "bars": [
              {
                "askVolume": 9.0,
                "bidVolume": 9.1,
                "close": 42005.2,
                "high": 42010.5,
                "low": 41980.0,
                "open": 42000.1,
                "signedVolume": 0.25,
                "timestamp": "2025-01-01T00:00:00Z",
                "volume": 18.2
              }
            ],
            "horizon_seconds": 900,
            "symbol": "BTC-USD"
          }
        ],
        "properties": {
          "bars": {
            "description": "Ordered price bars.",
            "items": {
              "$ref": "#/components/schemas/MarketBar"
            },
            "minItems": 1,
            "title": "Bars",
            "type": "array"
          },
          "horizon_seconds": {
            "default": 300,
            "description": "Prediction horizon in seconds for contextual metadata.",
            "maximum": 3600.0,
            "minimum": 60.0,
            "title": "Horizon Seconds",
            "type": "integer"
          },
          "symbol": {
            "description": "Instrument identifier.",
            "minLength": 1,
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "bars"
        ],
        "title": "PredictionRequest",
        "type": "object"
      },
      "PredictionResponse": {
        "description": "Response representing the generated trading signal.",
        "examples": [
          {
            "filters": {
              "actions": [
                "BUY"
              ],
              "min_confidence": 0.6
            },
            "generated_at": "2025-01-01T00:00:30Z",
            "horizon_seconds": 900,
            "items": [
              {
                "score": 0.42,
                "signal": {
                  "action": "BUY",
                  "confidence": 0.78
                },
                "timestamp": "2025-01-01T00:00:30Z"
              }
            ],
            "pagination": {
              "limit": 1,
              "next_cursor": "2025-01-01T00:00:00Z",
              "returned": 1
            },
            "score": 0.42,
            "signal": {
              "action": "BUY",
              "confidence": 0.78,
              "rationale": "Composite heuristic weighting MACD trend..."
            },
            "symbol": "BTC-USD"
          }
        ],
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/PredictionFilters"
          },
          "generated_at": {
            "format": "date-time",
            "title": "Generated At",
            "type": "string"
          },
          "horizon_seconds": {
            "title": "Horizon Seconds",
            "type": "integer"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/PredictionSnapshot"
            },
            "title": "Items",
            "type": "array"
          },
          "pagination": {
            "$ref": "#/components/schemas/PaginationMeta"
          },
          "score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "description": "Composite alpha score driving the primary action.",
            "title": "Score"
          },
          "signal": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Primary trading signal at the head of the page.",
            "title": "Signal"
          },
          "symbol": {
            "title": "Symbol",
            "type": "string"
          }
        },
        "required": [
          "symbol",
          "horizon_seconds"
        ],
        "title": "PredictionResponse",
        "type": "object"
      },
      "PredictionSnapshot": {
        "description": "Snapshot of a derived signal at a point in time.",
        "example": {
          "score": 0.42,
          "signal": {
            "action": "BUY",
            "confidence": 0.78
          },
          "timestamp": "2025-01-01T00:00:30Z"
        },
        "properties": {
          "score": {
            "title": "Score",
            "type": "number"
          },
          "signal": {
            "additionalProperties": true,
            "title": "Signal",
            "type": "object"
          },
          "timestamp": {
            "format": "date-time",
            "title": "Timestamp",
            "type": "string"
          }
        },
        "required": [
          "timestamp",
          "score",
          "signal"
        ],
        "title": "PredictionSnapshot",
        "type": "object"
      },
      "SignalAction": {
        "description": "Supported signal directives.",
        "enum": [
          "buy",
          "sell",
          "hold",
          "exit"
        ],
        "title": "SignalAction",
        "type": "string"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      }
    },
    "securitySchemes": {
      "OAuth2Bearer": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "Production-ready endpoints for computing feature vectors and generating lightweight trading signals from streaming market data.",
    "title": "TradePulse Online Inference API",
    "version": "0.2.0",
    "x-api-lifecycle": {
      "current": "v1",
      "deprecated": [
        "v0"
      ],
      "retirement": "v0 endpoints are removed 90 days after deprecation notice."
    },
    "x-backwards-compatibility": {
      "guarantees": [
        "Schemas for existing response fields remain backward compatible within a major version.",
        "Deprecated fields retain original semantics until removal."
      ]
    },
    "x-deprecation-policy": {
      "notificationChannels": [
        "release-notes",
        "status-page"
      ],
      "policy": "Breaking changes require a new major version with 90-day overlap."
    }
  },
  "openapi": "3.1.0",
  "paths": {
    "/admin/kill-switch": {
      "delete": {
        "description": "Reset the kill-switch in an idempotent manner and preserve an audit trail.",
        "operationId": "reset_kill_switch_admin_kill_switch_delete",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Reset the global kill-switch",
        "tags": [
          "admin"
        ]
      },
      "get": {
        "description": "Inspect the kill-switch state and append an immutable audit record.",
        "operationId": "read_kill_switch_state_admin_kill_switch_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Read the global kill-switch state",
        "tags": [
          "admin"
        ]
      },
      "post": {
        "description": "Engage or reaffirm the kill-switch and emit a signed audit log entry.",
        "operationId": "engage_kill_switch_admin_kill_switch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KillSwitchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KillSwitchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Engage the global kill-switch",
        "tags": [
          "admin"
        ]
      }
    },
    "/features": {
      "post": {
        "deprecated": true,
        "operationId": "v1_compute_features_features_post",
        "parameters": [
          {
            "description": "Number of feature snapshots to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 1,
              "description": "Number of feature snapshots to return.",
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
              "title": "Cursor"
            }
          },
          {
            "description": "Filter snapshots on or after this timestamp.",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter snapshots on or after this timestamp.",
              "title": "Startat"
            }
          },
          {
            "description": "Filter snapshots on or before this timestamp.",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter snapshots on or before this timestamp.",
              "title": "Endat"
            }
          },
          {
            "description": "Return only feature keys with the provided prefix.",
            "in": "query",
            "name": "featurePrefix",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return only feature keys with the provided prefix.",
              "title": "Featureprefix"
            }
          },
          {
            "description": "Specific feature keys to include.",
            "in": "query",
            "name": "feature",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific feature keys to include.",
              "title": "Feature"
            }
          },
          {
            "in": "header",
            "name": "Idempotency-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            },
            "description": "Latest feature vector computed from the submitted bar window.",
            "headers": {
              "ETag": {
                "description": "Entity tag representing the hash of the response body.",
                "schema": {
                  "type": "string"
                }
              },
              "Idempotency-Key": {
                "description": "Echoes the idempotency key associated with the response.",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "X-Cache-Status": {
                "description": "Indicates whether the response was served from cache.",
                "schema": {
                  "enum": [
                    "hit",
                    "miss"
                  ],
                  "type": "string"
                }
              },
              "X-Idempotent-Replay": {
                "description": "Present with value 'true' when the response is replayed from the idempotency ledger.",
                "schema": {
                  "enum": [
                    "true"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Request payload failed validation or business rules."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication token missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authenticated caller lacks sufficient privileges."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "No feature snapshots matched the requested filters."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Idempotency key conflict detected for the supplied payload."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payload schema is syntactically valid but semantically incorrect."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Client exceeded configured rate limits."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unexpected server-side failure."
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Generate the latest engineered feature vector",
        "tags": [
          "features"
        ]
      }
    },
    "/health": {
      "get": {
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Health probe",
        "tags": [
          "health"
        ]
      }
    },
    "/metrics": {
      "get": {
        "operationId": "prometheus_metrics_metrics_get",
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "description": "Successful Response"
          }
        },
        "summary": "Prometheus metrics",
        "tags": [
          "health"
        ]
      }
    },
    "/predictions": {
      "post": {
        "deprecated": true,
        "operationId": "v1_generate_prediction_predictions_post",
        "parameters": [
          {
            "description": "Number of predictions to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 1,
              "description": "Number of predictions to return.",
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
              "title": "Cursor"
            }
          },
          {
            "description": "Return predictions generated at or after this time.",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return predictions generated at or after this time.",
              "title": "Startat"
            }
          },
          {
            "description": "Return predictions generated at or before this time.",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return predictions generated at or before this time.",
              "title": "Endat"
            }
          },
          {
            "description": "Filter predictions by signal action.",
            "in": "query",
            "name": "action",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter predictions by signal action.",
              "title": "Action"
            }
          },
          {
            "description": "Minimum signal confidence to include.",
            "in": "query",
            "name": "minConfidence",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum signal confidence to include.",
              "title": "Minconfidence"
            }
          },
          {
            "in": "header",
            "name": "Idempotency-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "Latest prediction derived from engineered features.",
            "headers": {
              "ETag": {
                "description": "Entity tag representing the hash of the response body.",
                "schema": {
                  "type": "string"
                }
              },
              "Idempotency-Key": {
                "description": "Echoes the idempotency key associated with the response.",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "X-Cache-Status": {
                "description": "Indicates whether the response was served from cache.",
                "schema": {
                  "enum": [
                    "hit",
                    "miss"
                  ],
                  "type": "string"
                }
              },
              "X-Idempotent-Replay": {
                "description": "Present with value 'true' when the response is replayed from the idempotency ledger.",
                "schema": {
                  "enum": [
                    "true"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Request payload failed validation or business rules."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication token missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authenticated caller lacks sufficient privileges."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "No predictions matched the requested filters."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Idempotency key conflict detected for the supplied payload."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payload schema is syntactically valid but semantically incorrect."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Client exceeded configured rate limits."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unexpected server-side failure."
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Produce a trading signal for the latest bar",
        "tags": [
          "predictions"
        ]
      }
    },
    "/v1/features": {
      "post": {
        "operationId": "v1_compute_features_v1_features_post",
        "parameters": [
          {
            "description": "Number of feature snapshots to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 1,
              "description": "Number of feature snapshots to return.",
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
              "title": "Cursor"
            }
          },
          {
            "description": "Filter snapshots on or after this timestamp.",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter snapshots on or after this timestamp.",
              "title": "Startat"
            }
          },
          {
            "description": "Filter snapshots on or before this timestamp.",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter snapshots on or before this timestamp.",
              "title": "Endat"
            }
          },
          {
            "description": "Return only feature keys with the provided prefix.",
            "in": "query",
            "name": "featurePrefix",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return only feature keys with the provided prefix.",
              "title": "Featureprefix"
            }
          },
          {
            "description": "Specific feature keys to include.",
            "in": "query",
            "name": "feature",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Specific feature keys to include.",
              "title": "Feature"
            }
          },
          {
            "in": "header",
            "name": "Idempotency-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            },
            "description": "Latest feature vector computed from the submitted bar window.",
            "headers": {
              "ETag": {
                "description": "Entity tag representing the hash of the response body.",
                "schema": {
                  "type": "string"
                }
              },
              "Idempotency-Key": {
                "description": "Echoes the idempotency key associated with the response.",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "X-Cache-Status": {
                "description": "Indicates whether the response was served from cache.",
                "schema": {
                  "enum": [
                    "hit",
                    "miss"
                  ],
                  "type": "string"
                }
              },
              "X-Idempotent-Replay": {
                "description": "Present with value 'true' when the response is replayed from the idempotency ledger.",
                "schema": {
                  "enum": [
                    "true"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Request payload failed validation or business rules."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication token missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authenticated caller lacks sufficient privileges."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "No feature snapshots matched the requested filters."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Idempotency key conflict detected for the supplied payload."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payload schema is syntactically valid but semantically incorrect."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Client exceeded configured rate limits."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unexpected server-side failure."
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Generate the latest engineered feature vector",
        "tags": [
          "features"
        ]
      }
    },
    "/v1/predictions": {
      "post": {
        "operationId": "v1_generate_prediction_v1_predictions_post",
        "parameters": [
          {
            "description": "Number of predictions to return.",
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "default": 1,
              "description": "Number of predictions to return.",
              "maximum": 500,
              "minimum": 1,
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
            "in": "query",
            "name": "cursor",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Pagination cursor (exclusive) encoded as ISO 8601 timestamp.",
              "title": "Cursor"
            }
          },
          {
            "description": "Return predictions generated at or after this time.",
            "in": "query",
            "name": "startAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return predictions generated at or after this time.",
              "title": "Startat"
            }
          },
          {
            "description": "Return predictions generated at or before this time.",
            "in": "query",
            "name": "endAt",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Return predictions generated at or before this time.",
              "title": "Endat"
            }
          },
          {
            "description": "Filter predictions by signal action.",
            "in": "query",
            "name": "action",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter predictions by signal action.",
              "title": "Action"
            }
          },
          {
            "description": "Minimum signal confidence to include.",
            "in": "query",
            "name": "minConfidence",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Minimum signal confidence to include.",
              "title": "Minconfidence"
            }
          },
          {
            "in": "header",
            "name": "Idempotency-Key",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Idempotency-Key"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PredictionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PredictionResponse"
                }
              }
            },
            "description": "Latest prediction derived from engineered features.",
            "headers": {
              "ETag": {
                "description": "Entity tag representing the hash of the response body.",
                "schema": {
                  "type": "string"
                }
              },
              "Idempotency-Key": {
                "description": "Echoes the idempotency key associated with the response.",
                "schema": {
                  "maxLength": 128,
                  "type": "string"
                }
              },
              "X-Cache-Status": {
                "description": "Indicates whether the response was served from cache.",
                "schema": {
                  "enum": [
                    "hit",
                    "miss"
                  ],
                  "type": "string"
                }
              },
              "X-Idempotent-Replay": {
                "description": "Present with value 'true' when the response is replayed from the idempotency ledger.",
                "schema": {
                  "enum": [
                    "true"
                  ],
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Request payload failed validation or business rules."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authentication token missing or invalid."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Authenticated caller lacks sufficient privileges."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "No predictions matched the requested filters."
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Idempotency key conflict detected for the supplied payload."
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Payload schema is syntactically valid but semantically incorrect."
          },
          "429": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Client exceeded configured rate limits."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            },
            "description": "Unexpected server-side failure."
          }
        },
        "security": [
          {
            "OAuth2Bearer": []
          }
        ],
        "summary": "Produce a trading signal for the latest bar",
        "tags": [
          "predictions"
        ]
      }
    }
  },
  "servers": [
    {
      "description": "Production",
      "url": "https://api.tradepulse.example.com"
    },
    {
      "description": "Staging",
      "url": "https://staging-api.tradepulse.example.com"
    }
  ]
}
