apiVersion: apps/v1
kind: Deployment
metadata:
  name: tradepulse-api
spec:
  replicas: 3
  template:
    metadata:
      annotations:
        security.tradepulse.dev/log-level: "info"
        security.tradepulse.dev/mtls-required: "true"
      labels:
        environment: staging
    spec:
      nodeSelector:
        environment: staging
      containers:
        - name: tradepulse-api
          resources:
            requests:
              cpu: 250m
              memory: 512Mi
            limits:
              cpu: "1"
              memory: 1Gi
          env:
            - name: TRADEPULSE_ENVIRONMENT
              value: staging
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                secretKeyRef:
                  name: tradepulse-kafka-client
                  key: bootstrap.servers
            - name: KAFKA_SECURITY_PROTOCOL
              valueFrom:
                secretKeyRef:
                  name: tradepulse-kafka-client
                  key: security.protocol
            - name: KAFKA_SSL_CAFILE
              value: /etc/tradepulse/kafka/ca.crt
            - name: KAFKA_SSL_CERTFILE
              value: /etc/tradepulse/kafka/client.crt
            - name: KAFKA_SSL_KEYFILE
              value: /etc/tradepulse/kafka/client.key
            - name: KAFKA_SASL_MECHANISM
              valueFrom:
                secretKeyRef:
                  name: tradepulse-kafka-client
                  key: sasl.mechanism
            - name: KAFKA_SASL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: tradepulse-kafka-client
                  key: sasl.username
            - name: KAFKA_SASL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: tradepulse-kafka-client
                  key: sasl.password
          volumeMounts:
            - name: kafka-client-tls
              mountPath: /etc/tradepulse/kafka
              readOnly: true
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: tradepulse-api
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tradepulse-api
                topologyKey: topology.kubernetes.io/zone
      volumes:
        - name: kafka-client-tls
          secret:
            secretName: tradepulse-kafka-client
